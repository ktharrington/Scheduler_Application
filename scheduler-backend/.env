# ===================== Scheduler Backend .env =====================
# Place this file next to your docker-compose.yml

# --- Core ---
DATABASE_URL=postgresql://scheduler:scheduler@postgres:5432/scheduler
REDIS_URL=redis://redis:6379/0

# --- App URLs (IMPORTANT) ---
# Set this to a PUBLIC HTTPS origin where your media is served.
# Instagram must be able to fetch your files from the open internet.
# Examples:
#   - https://cdn.yourdomain.com
#   - https://your-bucket.r2.dev
APP_BASE_URL=https://YOUR-PUBLIC-MEDIA-DOMAIN

# Where the API stores local uploads (not used if you're only pasting external URLs)
MEDIA_ROOT=./media
MEDIA_URL_PATH=/media
META_LONG_LIVED_TOKEN=EAAnGbsPb3CwBPBWeQU0USb9QlhJTFyqk8cO9kB8U3q1aR5f06erdzhJkIMDxPbpCzCiSOgIKosbB5Yw0yOKoRaNWVgnWZB1RQZAVsfdVZB1QOHue5NwzCrb4uWfLaLo0Vq9odSJLxMIu8KWJ0KTyLq5vCVwLZCmR9JI8ZAHVq32lrzrXZBdpi2CdIPhHVF


# --- Meta Graph ---
# API version to use with Instagram Graph API
META_GRAPH_VERSION=v21.0
# 0 = real Graph calls, 1 = mock (won't post on IG)
MOCK_META=0

# --- CORS / Misc ---
ALLOWED_ORIGINS=*
TZ=Etc/UTC

# --- Storage backend ---
# Use s3 for Cloudflare R2 / AWS S3 / MinIO (S3-compatible)
STORAGE_BACKEND=s3
MEDIA_BACKEND=s3

# --- S3-compatible settings (Cloudflare R2 example) ---
S3_PROVIDER=r2
S3_REGION=auto

# Create an API token in your provider's console and paste here
S3_ACCESS_KEY_ID=4a50528fa11b21e0c4c3ce4edf9a67a9
S3_SECRET_ACCESS_KEY=4a75e8bc691383a691644334fe17451d68021e8c7bf3e38273352846447b0069

# R2 account ID (for Cloudflare) or leave blank for AWS
R2_ACCOUNT_ID=35ed21b2a92bd61b371d19263c7c0d16

# Endpoint URL (R2 example below; for AWS: https://s3.amazonaws.com)
S3_ENDPOINT_URL=https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com

# Public base URL that serves your objects (no trailing slash)
# The app will typically generate: ${S3_PUBLIC_BASE_URL}/${S3_BUCKET}/${key}
S3_PUBLIC_BASE_URL=https://your-public-r2-domain.r2.dev

# Bucket & optional key prefix
S3_BUCKET=my-scheduler-media-bucket
S3_PREFIX=uploads

# Make uploaded objects public (okay for dev/public buckets)
S3_OBJECT_ACL_PUBLIC_READ=true

# --- Worker resilience ---
PAUSE_ON_CONSEC_FAILS=3
RETRY_DELAY_SEC=600
# ==================================================================

